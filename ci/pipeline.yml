---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource

resources:
- name: postfix-config
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: ((postfix-config-uri))
    branch: ((postfix-config-branch))

- name: postfix-release
  type: s3-iam
  source:
    bucket: ((s3-bosh-releases-bucket))
    private: true
    regexp: postfix-(.*).tgz
    region_name: ((aws-region))

- name: stemcell-jammy
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent

- name: terraform-yaml
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file))
    region_name: ((aws-region))

- name: common-production
  type: s3-iam
  source:
    region_name: ((aws-region))
    bucket: ((private-production-bucket))
    versioned_file: production-postfix.yml

- name: postfix-deployment-production
  type: bosh-deployment
  source:
    target: ((production-bosh-target))
    client: ((production-bosh-client))
    client_secret: ((production-bosh-client-secret))
    ca_cert: ((bosh-ca-cert))
    deployment: postfix-production

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: tests-timer
  type: time
  source:
    interval: 10m

jobs:
- name: plan-postfix-production
  serial_groups: [deploy]
  plan:
  - in_parallel:
    - get: stemcell-jammy
      trigger: true
    - get: postfix-config
      trigger: true
    - get: postfix-release
      trigger: true
    - get: terraform-yaml
    - get: common-production
      trigger: true
  - put: postfix-deployment-production
    params:
      manifest: postfix-config/bosh/manifest.yml
      dry_run: true
      stemcells:
      - stemcell-jammy/*.tgz
      releases:
      - postfix-release/*.tgz
      ops_files:
      - postfix-config/bosh/opsfiles/production.yml
      vars_files:
      - terraform-yaml/state.yml
      - common-production/production-postfix.yml
      - postfix-config/bosh/varsfiles/production.yml
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Postfix production plan is ready for review
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform'
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to plan production Postfix
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform'
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-postfix-production
  serial_groups: [deploy]
  plan:
  - in_parallel:
    - get: postfix-config
      passed: [plan-postfix-production]
    - get: postfix-release
      passed: [plan-postfix-production]
    - get: stemcell-jammy
      passed: [plan-postfix-production]
    - get: terraform-yaml
      passed: [plan-postfix-production]
    - get: common-production
      passed: [plan-postfix-production]
  - put: postfix-deployment-production
    params:
      manifest: postfix-config/bosh/manifest.yml
      stemcells:
      - stemcell-jammy/*.tgz
      releases:
      - postfix-release/*.tgz
      ops_files:
      - postfix-config/bosh/opsfiles/production.yml
      vars_files:
      - terraform-yaml/state.yml
      - common-production/production-postfix.yml
      - postfix-config/bosh/varsfiles/production.yml
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed postfix on prodution
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy postfix on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform'
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: smoke-tests-production
  serial_groups: [deploy]
  plan:
  - in_parallel:
    - get: postfix-config
      passed: [deploy-postfix-production]
      trigger: true
    - get: terraform-yaml
      passed: [deploy-postfix-production]
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-test-cloudgov-sasl
    file: postfix-config/ci/verify-sasl.yml
    params:
      USERNAME: cloudgov@fr.cloud.gov
      PASSWORD: ((cloudgov_pw))
  - task: smoke-test-pages-sasl
    file: postfix-config/ci/verify-sasl.yml
    params:
      USERNAME: pages@fr.cloud.gov
      PASSWORD: ((pages_pw))
  - task: smoke-test-pages-sasl
    file: postfix-config/ci/verify-sasl.yml
    params:
      USERNAME: cloudgovbilling@fr.cloud.gov
      PASSWORD: ((cloudgovbilling_pw))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Smoke Tests for Postfix on prod PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Smoke Tests for Postfix on prod FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform'
      username: ((slack-username))
      icon_url: ((slack-icon-url))
